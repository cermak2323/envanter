"""
Veritabanƒ± Konfig√ºrasyonu - Lokal SQLite vs Production PostgreSQL
"""

import os
from pathlib import Path

# Ortamƒ± belirle
ENVIRONMENT = os.environ.get('FLASK_ENV', 'development')  # development, production
IS_PRODUCTION = ENVIRONMENT == 'production' or bool(os.environ.get('RENDER'))

# Proje k√∂k dizini
BASE_DIR = Path(__file__).parent

print(f"üîß Environment: {ENVIRONMENT}")
print(f"üìç Production: {IS_PRODUCTION}")


def get_database_uri():
    """Veritabanƒ± URI'sini ortama g√∂re d√∂nd√ºr"""
    
    if IS_PRODUCTION:
        # PRODUCTION: Render.com PostgreSQL
        database_url = os.environ.get('DATABASE_URL')
        if not database_url:
            raise ValueError("DATABASE_URL environment variable not set for production!")
        
        # PostgreSQL sslmode fix
        if database_url.startswith('postgres://'):
            database_url = database_url.replace('postgres://', 'postgresql://', 1)
        
        print(f"‚úÖ Production PostgreSQL: {database_url[:50]}...")
        return database_url
    else:
        # DEVELOPMENT: Lokal SQLite
        db_path = BASE_DIR / 'instance' / 'envanter_local.db'
        db_path.parent.mkdir(exist_ok=True)
        
        sqlite_uri = f'sqlite:///{db_path}'
        print(f"‚úÖ Development SQLite: {db_path}")
        return sqlite_uri


class Config:
    """Temel Konfig√ºrasyon"""
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    SQLALCHEMY_ENGINE_OPTIONS = {
        'pool_pre_ping': True,
        'pool_recycle': 300,
        'pool_timeout': 20,
    }


class DevelopmentConfig(Config):
    """Geli≈ütirme Ortamƒ± - SQLite"""
    DEBUG = True
    TESTING = False
    SQLALCHEMY_DATABASE_URI = get_database_uri()
    SQLALCHEMY_ECHO = True  # SQL sorgularƒ± konsola yazƒ±lƒ±r
    
    # Session
    SESSION_TYPE = 'filesystem'
    PERMANENT_SESSION_LIFETIME = 86400  # 24 saat


class ProductionConfig(Config):
    """√úretim Ortamƒ± - PostgreSQL"""
    DEBUG = False
    TESTING = False
    SQLALCHEMY_DATABASE_URI = get_database_uri()
    SQLALCHEMY_ECHO = False
    
    # Session
    SESSION_TYPE = 'filesystem'
    PERMANENT_SESSION_LIFETIME = 86400
    
    # Security
    SESSION_COOKIE_SECURE = True
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SAMESITE = 'Lax'


class TestingConfig(Config):
    """Test Ortamƒ±"""
    DEBUG = True
    TESTING = True
    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'


# Aktif konfig√ºrasyonu se√ß
if IS_PRODUCTION:
    config = ProductionConfig()
    config_name = 'production'
else:
    config = DevelopmentConfig()
    config_name = 'development'

print(f"üìã Active Config: {config_name}")
